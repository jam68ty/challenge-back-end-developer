---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ebanking-network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - ebanking-network

  app-db:
    image: mysql:8
    container_name: app_db
    cap_add:
      - SYS_NICE
    restart: always
    volumes:
      - db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: ebanking
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "3306:3306"
    networks:
      - ebanking-network
  web:
    container_name: web
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - app-db
      - kafka
    environment: # Pass environment variables to the service
      DATASOURCE_HOST: app-db
      DATASOURCE_POST: 3306
      DATASOURCE_NAME: ebanking
      DATASOURCE_USERNAME: user
      DATASOURCE_PASSWORD: 123456
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - ebanking-network
    command: mvn clean install spring-boot:run

volumes:
  db:
networks:
  ebanking-network:
    driver: bridge